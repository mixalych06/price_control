from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


async def gen_markup_sellers(sellers: dict):
    """–°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è, –∫–ª—é—á-—Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π, –∑–Ω—á–µ–Ω–∏–µ-–¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–∞"""
    markup_sellers = InlineKeyboardMarkup(row_width=1)
    x = []
    for key, value in sellers.items():
        x.append(InlineKeyboardButton(text=str(value), callback_data=f'moreSeller:{key}'))
    markup_sellers.add(*x)

    return markup_sellers

async def gen_seller_markup_(tracked_product, seller_id):
    """–°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–∞"""
    markup_seller = InlineKeyboardMarkup(row_width=1)
    markup_seller.add(InlineKeyboardButton(text=f'‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è\n({tracked_product[0]})', callback_data=f'track:{seller_id}:1:0'),
                      InlineKeyboardButton(text=f'‚ùé –ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è\n({tracked_product[1]})', callback_data=f'track:{seller_id}:0:0'))

    return markup_seller

async def gen__markup_pagination(page_number, seller_id, trecked, products_len):
    """–°–æ–∑–¥–∞—ë—Ç –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
    page_number-–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞, seller_id, trecked-1 –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è 0 –Ω–µ—Ç, products_len - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ"""
    markup_pagination = InlineKeyboardMarkup(row_width=3)
    text_btn = {1: ('üîï–ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å', 'noTreck'), 0: ('min = —Ü–µ–Ω–µ', 'startTreck')}

    if products_len == 1:
        markup_pagination.add(InlineKeyboardButton(text=f'{text_btn[trecked][0]}', callback_data=f'{text_btn[trecked][1]}:{seller_id}')).add(
            InlineKeyboardButton(text=f'‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è', callback_data='null'),
            InlineKeyboardButton(text=f'{page_number+1}/{products_len}', callback_data=f'null'),
            InlineKeyboardButton(text=f'‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è', callback_data=f'null'))

    elif 0 < page_number < products_len - 1:
        markup_pagination.add(InlineKeyboardButton(text=f'{text_btn[trecked][0]}', callback_data=f'{text_btn[trecked][1]}:{seller_id}')).add(
            InlineKeyboardButton(text=f'‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è', callback_data=f'track:{seller_id}:{trecked}:{page_number-1}'),
            InlineKeyboardButton(text=f'{page_number + 1}/{products_len}', callback_data=f'null'),
            InlineKeyboardButton(text=f'‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è', callback_data=f'track:{seller_id}:{trecked}:{page_number+1}'))
    elif page_number == 0:
        markup_pagination.add(InlineKeyboardButton(text=f'{text_btn[trecked][0]}', callback_data=f'{text_btn[trecked][1]}:{seller_id}')).add(
            InlineKeyboardButton(text=f'‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è', callback_data=f'track:{seller_id}:{trecked}:{products_len - 1}'),
            InlineKeyboardButton(text=f'{page_number + 1}/{products_len}', callback_data=f'null'),
            InlineKeyboardButton(text=f'‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è', callback_data=f'track:{seller_id}:{trecked}:{page_number + 1}'))
    elif page_number == products_len - 1:
        markup_pagination.add(InlineKeyboardButton(text=f'{text_btn[trecked][0]}', callback_data=f'{text_btn[trecked][1]}:{seller_id}')).add(
            InlineKeyboardButton(text=f'‚¨ÖÔ∏è‚¨ÖÔ∏è‚¨ÖÔ∏è', callback_data=f'track:{seller_id}:{trecked}:{page_number - 1}'),
            InlineKeyboardButton(text=f'{page_number + 1}/{products_len}', callback_data=f'null'),
            InlineKeyboardButton(text=f'‚û°Ô∏è‚û°Ô∏è‚û°Ô∏è', callback_data=f'track:{seller_id}:{trecked}:{0}'))

    return markup_pagination
